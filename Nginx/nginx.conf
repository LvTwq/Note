
#user  nobody;
# 设置工作进程数
worker_processes  auto;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

# 配置网络连接的事件驱动模型和基本行为
events {
    # 每个进程的最大连接数
    worker_connections  1024;
    # 使用 epoll 模型（Linux 高性能 IO）
    use epoll;
}

# 义 HTTP 协议相关的功能，例如反向代理、负载均衡、静态文件服务
http {
    include       mime.types;
    default_type  application/octet-stream;
    server_tokens  off;
    client_max_body_size 50m;
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;


    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" "request_time":"$request_time" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    log_format access_http_log escape=json '{"time":"$time_local",'
            '"http_host":"$http_host",'
                '"server_port":"$server_port",'
                '"remote_addr":"$remote_addr",'
                '"remote_port":"$remote_port",'
                '"status":"$status",'
                '"request_uri":"$request_uri",'
                '"request_time":"$request_time",'
                '"upstream_response_time":"$upstream_response_time",'
                '"upstream_connect_time":"$upstream_connect_time",'
                '"upstream_addr":"$upstream_addr",'
                '"upstream_status":"$upstream_status"}';
    sendfile        on;
    keepalive_timeout  65;


    #gzip  on;


    # 使用请求的主机名 ($host) 和 URI ($uri) 作为区分键，每秒最多 40 个请求
    limit_req_zone $host$uri zone=limits:10m rate=40r/s;
    # 使用主机名 ($host) 作为区分键，并发连接数信息存储最多10m
    limit_conn_zone $host zone=global_conn_limit_zone:10m;
    # 使用本地的 DNS 服务器，禁用对 IPv6 地址的解析
    resolver 127.0.0.1 ipv6=off;
    # 设置 DNS 解析的超时时间为 5 秒
    resolver_timeout 5s;

    # 定义虚拟主机，用于区分不同的站点或域名
    server {
        listen       20203;
        server_name  localhost;

        location / {
            rewrite ^/(.*) $scheme://$http_host/enadmin/$1 permanent;
        }

    

        location ^~ /enadmin/api/ {

        # 使用之前通过 limit_req_zone 定义的共享内存区域 limits，允许1000个请求
            limit_req zone=limits burst=1000 nodelay;
            # 使用之前通过 limit_conn_zone 定义的共享内存区域 global_conn_limit_zone，最大并发连接数为 20
            limit_conn global_conn_limit_zone 20;


            proxy_pass http://127.0.0.1:8400/;
            # proxy_pass https://168.168.168.183:20203/enadmin/api;
            add_header Cache-Control no-store;
            proxy_set_header  Host             $host;
            proxy_set_header  Http-Host        $http_host;
            proxy_set_header  X-Real-IP        $remote_addr;
            proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;
        }


        location ^~ /enadmin {
            alias "/dev/nginx-1.21.3/conf/www/admin";
            index index.html;
            absolute_redirect off;
            add_header Cache-Control max-age=3600;
        }  


        location ^~ /queryPracctByName {
            types {
                default_type text/plain;
            } 
            alias /dev/nginx-1.21.3/conf/www/tmp.json;

            index interface;
        }

        location /DNSWebService/dnsCommand {
            proxy_pass http://127.0.0.1:8002;  # 指定转发地址和端口
            proxy_set_header Host $host;        # 保持原始 Host 头
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}