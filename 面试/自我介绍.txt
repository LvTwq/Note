面试官您好，我叫lvmc，2020年毕业于nuist，毕业后一直从事Java开发的工作。

我有以下几个优势：

1、首先，Java基本功扎实，对Java语言的核心内容，比如线程池、反射。编码的时候，会考虑使用设计模式来优化代码。

2、第二，掌握Spring生态的常用框架，了解基本原理，平时开发的时候会用一些框架的特性

3、第三，掌握常见的数据库。关系型数据库，用过 MySQL/PostgreSQL/ClickHouse，能够进行SQL优化，也能使用Redis来实现缓存优化，和分布式锁。

4、我了解一些常用的Linux命令以及常见的网络协议，能够进行问题定位和处理

5、我们的服务都是用docker部署的，了解docker的基本使用

6、在之前公司，不是完全的前后端分离，因此也掌握了一些基础js和Vue相关的知识，能够完成不复杂的前端功能。

7、我们的系统有分布式场景，所以研究过分布式下的任务调度，文件同步。





目前就职于江苏易安联，是一家网络安全公司。

做过几个项目，第一个我们称为：零信任安全接入系统
这个系统主要解决客户远程办公，公网访问内网资源的安全问题。
简单来讲，其实也就是VPN，不过比传统的VPN功能更强。
一般来说一个VPN，分为三大块，第一个是客户端，比如Windows/iOS/Android，第二个网关，用来连接两个网络，建隧道的
第三个我们称为控制器，顾名思义就是控制整个系统运行逻辑的模块。
我负责控制器的几个子系统：
第一是审计，对用户所有行为的记录，实现了日志的采集、数据入库，以及查询。基于 Kafka+Filebeat+ClickHouse 架构实现，
最高可支持单日1亿的数据存储和检索查询，16核CPU，32G内存，实测分页查询耗时1秒内
第二是开放平台，通过OAuth2.0实现。同时也做了认证系统，实现了各种单点协议
第三是系统监控，通过 prometheus 对 CPU、内存、磁盘等资源进行监控，并可根据自定义指标进行告警
第四是通过 DNSmasq、iptables 等工具进行网络流量的管控



第二个项目是文件服务中心，提供统一的文件上传/下载入口，来简化业务侧的逻辑处理，主要实现了以下功能：

1）解决分布式场景下的文件存储问题
2）支持大文件分片上传
3）通过nginx实现了限流、限速等下载策略，做成了一个管理端功能，可以通过页面配置。


第三个平台组件开发，根据公司的项目性质，研发了一些基础组件供业务层使用

1）自研了一套分布式定时任务组件：支持分布式环境下任务调度、可视化管理、失败告警与重试
2）对于用户的敏感信息，存储时是需要加密的，每次手动加解密导致重复代码比较多，所以开发了数据库加解密组件，
通过注解的方式实现了自动加解密
3）集群场景下，数据库往往会做主备，出于提高性能和可用性的考虑，研发了数据库读写分离组件，主库写，从库读




前一家公司，叫hy信息，这家公司做公检法业务
我主要是做安徽省纪委办案平台，帮助安徽省纪委监委部门实现了全面信息化。

1）这个系统有多个子系统，所以会涉及到单点登录，负责了这部分的开发工作。

2）这个系统有一个特点就是，下拉框特别多，有大量的枚举值，每次从数据库里查询很繁琐
使用 AOP，反射，缓存等技术，提高了性能，减少了代码量

3）信创改造，涉及浏览器、操作系统、数据库、各类中间件的适配。

4）基于nginx和keepalived完成了系统高可用改造。


以上就是做过的一些主要项目。




反问：
1）项目组做什么的
2）这个岗位为什么还在招人
3）加班出差情况
4）技术栈




第一次启动时扫描所有使用了Job注解的方法，存到数据库：模块名、全限定类名+方法名、方法名、cron 表达式、最短锁时间、最长锁时间

实现SchedulingConfigurer的接口，自定义线程池。
先组装一些数据，把每个任务对应的class对象、Method对象放到内存里。
循环处理内存里的任务数据，创建runnable对象，对象里通过反射执行Method方法，把runnable对象提交到线程池。

在执行method之前，用redis实现分布式锁，锁最长时间，避免多节点重复执行，方法执行结束，如果执行时间少于最短锁时间，将锁时间改为 最短锁时间-执行时间




在yml中配置读写模式：读写分离、不分离；多个数据源：master、slave01、slave02
使用@ConfigurationProperties注解，声明一个bean，获取配置好的数据，组装成map，key是数据源名称，value 是 DataSource 数据源
实现 spring 框架的 AbstractRoutingDataSource 抽象类，实现自己的数据源实现类，实现多数据源选择算法，默认负载均衡：实现一个计数器，对多数据源大小取模，决定选择哪个数据源；

使用mybatis作为持久层框架，实现一个拦截器，在拦截器里给每一个线程设置数据源名称，使用 ThreadLocal 来实现，如果是读写分离，新增/修改/删除，都是操作主库，查询则读取从库，有多个从库时，使用多数据源选择算法。

在自定义数据源实现类里，实现抽象方法，用于指定当前要使用的数据源，从 ThreadLocal 里取值。



定义一个注解，给需要加解密的字段添加注解，定义一个mybatis拦截器，其实他也是mybatis封装的一个切面，从切面里拿数据，
拦截insert/update方法，过滤加了注解的字段，取出值，加密，替换，把加密后的数据入库
拦截select方法，取出值，解密替换，查询的时候要注意，把入参需要加密的也加密